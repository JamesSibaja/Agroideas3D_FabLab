version: '3.9'

services:
  db:
    build:
      context: .
      dockerfile: Dockerfile.database
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - mynetwork
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  gunicorn:
    build:
      context: .
      dockerfile: Dockerfile.gunicorn
    volumes:
      - ./agroideas:/app
    expose:
      - "8765"
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    networks:
      - mynetwork

  # documentation:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.docs
  #   volumes:
  #     - .:/app
  #   command: make -C docs html
  #   networks:
  #     - mynetwork

  nginx:
    image: nginx:latest
    ports:
      - mode: host
        protocol: tcp
        published: 80
        target: 80
      - mode: host
        protocol: tcp
        published: 443
        target: 443
    volumes:
      - ./agroideas:/app
      - ./nginx/snippets:/etc/nginx/snippets
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - certbot-etc:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot # Monta el directorio para los certificados
    depends_on:
      - gunicorn
    env_file:
      - .env
    networks:
      - mynetwork

  certbot:
    image: certbot/certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot# Monta el directorio para los certificados
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    networks:
      - mynetwork

networks:
  mynetwork:
    driver: bridge

volumes:
  db_data:
  certbot-www:
  certbot-etc:

