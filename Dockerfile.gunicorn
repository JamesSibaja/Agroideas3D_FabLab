# Utiliza una imagen base de Python para Django
FROM python:3.13.6

# Instala las dependencias del sistema necesarias para lxml
RUN apt-get update

# Establece el directorio de trabajo en /app
WORKDIR /app

# Copiar el resto de los archivos de la aplicaci√≥n
COPY ./agroideas /app

COPY requirements.txt /app/

RUN chmod +x /app/wait-for-db.sh


RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    # fonts-freefont-ttf \
    postgresql \
    libgdal-dev \
    gdal-bin \
    python3-psycopg2 \
    binutils \
    postgresql-contrib \
    nginx && \
    rm -rf /var/lib/apt/lists/*

RUN apt-get update && \
    apt-get install -y \
    postgis && \
    rm -rf /var/lib/apt/lists/*

# activa el entorno virtual, actualiza pip e instala las dependencias de Python
RUN . venv/bin/activate && \
    pip install --upgrade pip && \
    pip install -r requirements.txt


# COPY nginx.conf /etc/nginx/conf.d/default.conf

CMD ["/bin/bash", "-c", "source venv/bin/activate && python manage.py collectstatic --noinput && gunicorn agroideas.wsgi:application -w 4 --worker-connections=1000 --timeout 600 --bind 0.0.0.0:8765"]